#!/bin/bash

BACKEND_REPO="https://github.com/moxfest/moxfest"
BACKEND_DIR="backend"
BRANCH="main"

get_commit_info() {
    local target_dir=${1:-$BACKEND_DIR}
    if [ ! -d "$target_dir" ] || [ ! -d "$target_dir/.git" ]; then
        echo "‚ùå –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è $target_dir –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –∏–ª–∏ –Ω–µ —è–≤–ª—è–µ—Ç—Å—è git-—Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–µ–º" >&2
        return 1
    fi

    commit_hash=$(git -C "$target_dir" rev-parse --short HEAD 2>/dev/null)
    if [ $? -ne 0 ]; then
        echo "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–æ–º–º–∏—Ç–µ" >&2
        return 1
    fi

    commit_date=$(git -C "$target_dir" log -1 --format="%cd" --date=short 2>/dev/null)
    commit_author=$(git -C "$target_dir" log -1 --format="%an" 2>/dev/null)
    commit_message=$(git -C "$target_dir" log -1 --format="%s" 2>/dev/null)

    echo "–¢–µ–∫—É—â–∏–π –∫–æ–º–º–∏—Ç: $commit_hash"
    echo "–î–∞—Ç–∞: $commit_date"
    echo "–ê–≤—Ç–æ—Ä: $commit_author"
    echo "–°–æ–æ–±—â–µ–Ω–∏–µ: $commit_message"
}

if [ ! -d "$BACKEND_DIR" ]; then
  echo "üîÑ –ö–ª–æ–Ω–∏—Ä—É–µ–º —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π –±—ç–∫–µ–Ω–¥–∞..."
  if git clone -b $BRANCH $BACKEND_REPO $BACKEND_DIR; then
    echo "‚úÖ –ë—ç–∫–µ–Ω–¥ —É—Å–ø–µ—à–Ω–æ —Å–∫–ª–æ–Ω–∏—Ä–æ–≤–∞–Ω"

    echo "üì¶ –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏..."
    (cd $BACKEND_DIR && npm install)

    echo ""
    get_commit_info "$BACKEND_DIR"
  else
    echo "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∫–ª–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–∏ –±—ç–∫–µ–Ω–¥–∞" >&2
    exit 1
  fi
else
  echo "üîÑ –û–±–Ω–æ–≤–ª—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π –±—ç–∫–µ–Ω–¥..."

  echo "–¢–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –¥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è:"
  get_commit_info "$BACKEND_DIR"
  echo ""

  if ! git -C "$BACKEND_DIR" rev-parse --is-inside-work-tree >/dev/null 2>&1; then
    echo "‚ùå –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è $BACKEND_DIR –Ω–µ —è–≤–ª—è–µ—Ç—Å—è git-—Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–µ–º" >&2
    exit 1
  fi

  echo "üíæ –°–æ—Ö—Ä–∞–Ω—è–µ–º –ª–æ–∫–∞–ª—å–Ω—ã–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ stash..."
  git -C "$BACKEND_DIR" stash save "–ê–≤—Ç–æ—Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –ø–µ—Ä–µ–¥ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ–º"

  echo "üîÑ –ü–æ–ª—É—á–∞–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è –∏–∑ —É–¥–∞–ª—ë–Ω–Ω–æ–≥–æ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è..."
  if git -C "$BACKEND_DIR" pull origin $BRANCH; then
    echo "‚úÖ –ë—ç–∫–µ–Ω–¥ —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª—ë–Ω"

    echo "‚Ü©Ô∏è –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è –∏–∑ stash..."
    git -C "$BACKEND_DIR" stash pop

    if [ -f "$BACKEND_DIR/package.json" ]; then
      if [ "$BACKEND_DIR/package.json" -nt "$BACKEND_DIR/node_modules" ]; then
        echo "üì¶ –û–±–Ω–æ–≤–ª—è–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏..."
        (cd $BACKEND_DIR && npm install)
      else
        echo "üîí –ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –≤ –∞–∫—Ç—É–∞–ª—å–Ω–æ–º —Å–æ—Å—Ç–æ—è–Ω–∏–∏"
      fi
    fi

    echo ""
    echo "–°–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ—Å–ª–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è:"
    get_commit_info "$BACKEND_DIR"
  else
    echo "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –±—ç–∫–µ–Ω–¥–∞" >&2
    echo "‚Ü©Ô∏è –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è –∏–∑ stash..."
    git -C "$BACKEND_DIR" stash pop

    echo ""
    echo "–¢–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ:"
    get_commit_info "$BACKEND_DIR"
    echo "‚ö†Ô∏è –ë—ç–∫–µ–Ω–¥ –Ω–µ –±—ã–ª –æ–±–Ω–æ–≤–ª–µ–Ω, —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞ –ø—Ä–µ–¥—ã–¥—É—â–∞—è –≤–µ—Ä—Å–∏—è"

    exit 1
  fi
fi

echo ""
echo "–î–∞–µ–º –ø—Ä–∞–≤–∞ –Ω–∞ –±—ç–∫..."
sudo chmod -R 777 './backend'

echo ""
echo "‚ú® –û–ø–µ—Ä–∞—Ü–∏—è —Å –±—ç–∫–µ–Ω–¥–æ–º –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!"